@typeparam TItem;
@using SmartVendApp.Controllers.Interface;
@inject IModalController<TItem> ModalController;
@inject IListController<TItem> ListController;

<div class="row flex-grow-1 m-0 bg-white position-relative rounded-3" style="overflow:hidden;">
    <div class="col p-0 h-100" style="overflow-y:auto;">
        <ul class="list-group m-0 p-0">
            @foreach (var item in Items)
            {
                <li class="list-group-item rounded-3 m-1 d-flex justify-content-between align-items-center" style="cursor: pointer;">
                        <span><bold>@ModalController.GetDisplayName(item)</bold> <br /> @ModalController.GetDisplayDetails(item)</span>

                    <div class="d-flex">
                        <img src="content/edit.svg"
                             class="me-2 action-icon"
                             alt="Edytuj"
                             @onclick="() => ModalController.ShowEditModal(item)" />
                        <img src="content/delete.svg"
                             class="action-icon"
                             alt="Usuń"
                             @onclick="() => ModalController.ShowDeleteConfirmationModal(item)" />
                    </div>
                </li>
            }
        </ul>
    </div>
    <img src="content/add.svg"
         class="action-icon action-icon-add position-absolute bottom-0 start-50 translate-middle-x"
         alt="Dodaj"
         @onclick="ModalController.ShowAddModal">
        @if (@ModalController.ShowSuccess)
        {
                <div class="position-absolute bottom-50 alert-dark text-center p-5">"@Name został usunięty"</div>
        }
        @if (@ModalController.ShowError)
        {
                <div class="alert alert-danger mt-2">Błąd podczas usuwania</div>
        }
</div>
 
@code {
    [Parameter]
    public IEnumerable<TItem> Items { get; set; }

    [Parameter]
    public string Name { get; set; }

}